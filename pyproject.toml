[project]
dynamic = ["version"]
name = "discord-ui-store"
description = "An extension for disnake-like libraries, providing an alternative to `ui.View`s."
authors = [{ name = "Eneg" }]
dependencies = [
    "attrs >= 22.1.0",            # min_len
    "anyio >= 4.0.0",
    "typing-extensions >= 4.4.0", # infer_variance
]
requires-python = ">=3.9,<4.0"
readme = "README.md"
license = { text = "GPL-3.0-or-later" }


[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"


[tool.pdm]
distribution = true

[tool.pdm.dev-dependencies]
dev = ["ruff"]

[tool.pdm.build]
includes = ["src/ui_store"]

[tool.pdm.version]
source = "file"
path = "src/ui_store/__init__.py"


[tool.ruff]
line-length = 100
target-version = "py39"

[tool.ruff.lint]
preview = true
explicit-preview-rules = true

select = [
    "ALL",
    "RUF022", # sort __all__
]
ignore = [
    "ARG",    # unused parameters
    "D100",   # undocumented modules
    "D105",   # undocumented dunders
    "COM812", # don't require commas
    "PD",     # we aren't using pandas
]

[tool.ruff.lint.per-file-ignores]
"examples/**.py" = [
    "INP001", # this *is* a namespace package
    "D10",    # it's not /public API/
    "S101",   # asserts are fine
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.isort]
combine-as-imports = true
split-on-trailing-comma = false
extra-standard-library = ["typing_extensions"]


[tool.pyright]
include = ["src/ui_store"]
exclude = ["dev"]
pythonVersion = "3.9"

typeCheckingMode = "strict"

reportImportCycles = true

reportUnnecessaryTypeIgnoreComment = "information"
reportUnnecessaryIsInstance = "information"

executionEnvironments = [
    { root = "examples", reportUnknownMemberType = false, reportIncompatibleMethodOverride = false }
]
